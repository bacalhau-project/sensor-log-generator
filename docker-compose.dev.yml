# Development configuration for testing concurrent read/write
# Tests sensor writing while readers access the database

services:
  # Sensor simulator (writer)
  sensor:
    build: .
    image: sensor-simulator:latest
    container_name: sensor-writer
    environment:
      - CONFIG_FILE=/config/config.yaml
      - IDENTITY_FILE=/config/node-identity.json
      - SENSOR_WAL=true  # Use WAL mode for proper concurrent access
    volumes:
      - ./config:/config:ro    # Mount local config directory
      - ./data:/app/data        # Mount local data directory
    ports:
      - "8080:8080"  # Monitoring API
    restart: unless-stopped

  # Reader process (monitoring container)
  reader:
    image: alpine:latest
    container_name: sensor-reader
    depends_on:
      - sensor
    volumes:
      - ./data:/data:ro  # Mount data directory read-only
    command: >
      sh -c '
      apk add --no-cache sqlite &&
      echo "Waiting for database..." &&
      while [ ! -f /data/sensor_data.db ]; do sleep 2; done &&
      echo "Database found, starting monitoring..." &&
      while true; do
        echo "=== Reader Status at $$(date) ===" &&
        sqlite3 /data/sensor_data.db "
          SELECT \"Total readings: \" || COUNT(*) FROM sensor_readings;
          SELECT \"Latest: \" || MAX(timestamp) FROM sensor_readings;
          SELECT \"Anomalies: \" || SUM(anomaly_flag) FROM sensor_readings;
        " 2>/dev/null || echo "Database temporarily locked, retrying..." &&
        sleep 10;
      done
      '
    restart: unless-stopped
